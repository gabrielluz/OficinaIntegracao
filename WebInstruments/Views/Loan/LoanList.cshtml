@model WebInstruments.ViewModels.NewLoanViewModel
@{
    ViewBag.Title = "Empréstimos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Scripts.Render("~/bundles/bootstrap")
<h2>Empréstimos</h2>
<button type="button" id="myBtn" class="btn btn-sm btn-primary btn-create">Adicionar</button>

<table id="myTable" class="table table-striped table-bordered" cellspacing="0">
    <thead>
        <tr>
            <th><span class="glyphicon glyphicon-cog"></span></th>
            <th>Usuário</th>
            <th>Instrumento</th>
            <th>Data inicial</th>
            <th>Data final</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Loans)
        {
            <tr>
                <td align="center">
                    <button class="btn btn-default btn-xs" data-title="Borrow"><span class="glyphicon glyphicon-share-alt"></span></button>
                    <button class="btn btn-primary btn-xs" data-title="Edit" onclick="editInstrument(@item.Id)"><span class="glyphicon glyphicon-pencil"></span></button>
                    <button class="btn btn-danger btn-xs" data-title="Delete" onclick="remove(@item.Id, '/Instrument/Remove')"><span class="glyphicon glyphicon-trash"></span></button>
                </td>
                <td>@item.User.Name</td>
                <td>@item.Instrument.Name</td>
                <td>@item.StartDate</td>
                <td>@item.FinishDate</td>
            </tr>
        }
    </tbody>
</table>

<div id="myModal" class="modal">
    <div class="modal-content">
        @using (Html.BeginForm("Save", "Loan"))
        {
            <h3>Empréstimo</h3><hr />
            @Html.HiddenFor(l => l.NewLoan.Id, new { id = "iId" })
            <div class="row">
                <div class="col-md-6">
                    <label>Data inicial</label>
                    @Html.TextBoxFor(m => m.NewLoan.StartDate, new { @class = "form-control datepicker", id = "iStartDate" })

                    <label>Data final</label>
                    @Html.TextBoxFor(m => m.NewLoan.FinishDate, new { @class = "form-control datepicker", id = "iFinishDate" })

                    <label>Instrumento</label>
                    @Html.DropDownListFor(m => m.NewLoan.IdInstrument, new SelectList(Model.Instruments, "Id", "Code"), new { @class = "form-control", id = "lInstrument" })

                    <label>Usuário solicitante</label>
                    @Html.DropDownListFor(m => m.NewLoan.IdUser, new SelectList(Model.Users, "Id", "Name"), new { @class = "form-control", id = "lUser" })
                </div>
            </div>
            <hr />
            <div class="text-right">
                <input type="submit" class="btn btn-success" value="Salvar" />
                <button class="btn btn-danger" type="button" id="myCloseBtn">Cancelar</button>
            </div>
        }
    </div>
</div>

<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/datatables.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/datatables.min.css" />
<script src="~/Scripts/functions.js"></script>

@*<script>
    function editInstrument(id) {
        $.ajax({
            url: '/Instrument/getData',
            type: 'POST',
            data: { id: id },
            error: function () {
                alert("Não foi possível editar o instrumento!");
            },
            success: function (data) {
                var obj = JSON.parse(data);
                document.getElementById('iId').value = obj.Id;
                document.getElementById('iCode').value = obj.Code;
                document.getElementById('iMeasurementUnit').value = obj.IdMeasurementUnit;
                document.getElementById('iInstrumentType').value = obj.IdInstrumentType;
                document.getElementById('iMinimumValue').value = obj.MinimumValue;
                document.getElementById('iMaximumValue').value = obj.MaximumValue;
                document.getElementById('iSupplier').value = obj.IdSupplier;
                modal.style.display = "block";
            }
        });
    }
</script>*@